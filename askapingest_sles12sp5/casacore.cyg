##############################################################################
# maali cygnet file for casacore
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

The casacore package contains the core libraries of the old AIPS++/CASA
package. This split was made to get a better separation of core libraries and
applications. CASA is now built on top of casacore.

For further information see http://casacore.github.io/casacore/

EOF

#list extra build options in MAALI_TOOL_BUILD_OPTIONS_AVAIL
CASACORE_WITH_OPENMP=1
CASACORE_WITH_PTHREADS=1
CASACORE_WITH_MPI=0
CASACORE_WITH_MPI_MPICH_ABI=0
CASACORE_WITH_HDF5=1
CASACORE_WITH_FFTW=1
CASACORE_WITH_PYTHON=0
CASACORE_WITH_PYTHON3=0
CASACORE_WITH_OPENBLAS=0
MAALI_TOOL_BUILD_OPTIONS_AVAIL=("CASACORE_WITH_OPENMP=1:0", "CASACORE_WITH_PTHREADS=1:0", "CASACORE_WITH_MPI=0:1", "CASACORE_WITH_MPI_MPICH_ABI=0:1", "CASACORE_WITH_HDF5=1:0", "CASACORE_WITH_FFTW=1:0", "CASACORE_WITH_PYTHON=0:1", "CASACORE_WITH_PYTHON3=0:1", "CASACORE_WITH_ADIOS=0:1", "CASACORE_WITH_OPENBLAS=0:1")

# parse the build options, would be nice to make this a function 
# the issue currently is the local scope of variables declared 
CASACORE_BUILD_NAME=""
if [[ ${#MAALI_TOOL_BUILD_OPTIONS[@]} -gt 0 ]]; then
    for i in ${MAALI_TOOL_BUILD_OPTIONS[@]}
    do
        opt=(${i//=/ })
        optname=${opt[0]}
        optval=${opt[1]}
        echo $optname $optval 
        if [ "$optname" = "CASACORE_WITH_MPI" ]; then
            CASACORE_WITH_MPI=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_MPI_MPICH_ABI" ]; then
            CASACORE_WITH_MPI_MPICH_ABI=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_OPENMP" ]; then
            CASACORE_WITH_OPENMP=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_PTHREADS" ]; then
            CASACORE_WITH_PTHREADS=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_HDF5" ]; then
            CASACORE_WITH_HDF5=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_FFTW" ]; then
            CASACORE_WITH_FFTW=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_PYTHON" ]; then
            CASACORE_WITH_PYTHON=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_PYTHON3" ]; then
            CASACORE_WITH_PYTHON3=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_ADIOS" ]; then
            CASACORE_WITH_ADIOS=$optval
        fi
        if [ "$optname" = "CASACORE_WITH_OPENBLAS" ]; then
            CASACORE_WITH_OPENBLAS=$optval
        fi
    done
fi


# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="gcc/8.3.0 gcc/5.5.0 "

# URL to download the source code from
MAALI_URL="https://github.com/${MAALI_TOOL_NAME}/${MAALI_TOOL_NAME}/archive/v${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="askap-devel"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake/3.19.1"

# tool pre-requisites 
#MAALI_TOOL_PREREQ="cfitsio/3450 wcslib/7.3 intel-mkl/19.0.5 boost/1.66.0"
#MAALI_TOOL_PREREQ="cfitsio/3450 wcslib/7.3 boost/1.66.0"
MAALI_TOOL_PREREQ="cfitsio/3450 wcslib/7.3 boost/1.75.0"

#location of casacore cata 
CASACORE_DATA=/pawsey/askapingest_sles12sp5/casacore-data

# add additional configure options
# here are the default cmake options, directories point to appropriate. 
MAALI_TOOL_CONFIGURE=""
MAALI_TOOL_CONFIGURE+=' -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=RELEASE -DDATA_DIR=${CASACORE_DATA} '
MAALI_TOOL_CONFIGURE+=' -DCMAKE_EXE_LINKER_FLAGS="-lpthread -lcurl" '
MAALI_TOOL_CONFIGURE+=' -DCFITSIO_ROOT_DIR=${MAALI_CFITSIO_HOME} -DWCSLIB_ROOT_DIR=${MAALI_WCSLIB_HOME} '

#now parse build options, set build name
if [[ $CASACORE_WITH_OPENMP -eq 1 ]]; then
    MAALI_TOOL_CONFIGURE+=' -DUSE_OPENMP=ON '
else 
    CASACORE_BUILD_NAME+="-noopenmp"
    MAALI_TOOL_CONFIGURE+=' -DUSE_OPENMP=OFF '
fi
if [[ $CASACORE_WITH_PTHREADS -eq 1 ]]; then
    MAALI_TOOL_CONFIGURE+=' -DUSE_THREADS=ON '
else 
    CASACORE_BUILD_NAME+="-nothreads"
    MAALI_TOOL_CONFIGURE+=' -DUSE_THREADS=OFF '
fi
if [[ $CASACORE_WITH_ADIOS -eq 1 ]]; then
    CASACORE_WITH_HDF5=1
    CASACORE_WITH_MPI=1
    CASACORE_WITH_MPI_MPICH_ABI=0
    echo "Compiling with ADIOS support, automatically enabling MPI and parallel HDF5"
    MAALI_TOOL_PREREQ+=" adios/2.7.0-phdf5-mpi-abi-openmpi "
    MAALI_TOOL_CONFIGURE+=' -DUSE_ADIOS2=ON '
    CASACORE_BUILD_NAME+="-adios2"
else
    MAALI_TOOL_CONFIGURE+=' -DUSE_ADIOS2=OFF '
fi
if [[ $CASACORE_WITH_MPI -eq 1 ]]; then
    MAALI_TOOL_CONFIGURE+=' -DUSE_MPI=ON '
    CASACORE_BUILD_NAME+="-mpi"
    if [[ $CASACORE_WITH_MPI_MPICH_ABI -eq 1 ]]; then
        MAALI_TOOL_PREREQ+=" mvpaich/2.3b "
    else
        MAALI_TOOL_PREREQ+=" openmpi-ucx/4.0.3 "
        CASACORE_BUILD_NAME+="-openmpi-abi"
    fi
else 
    MAALI_TOOL_CONFIGURE+=' -DUSE_MPI=OFF '
fi
if [[ $CASACORE_WITH_HDF5 -eq 1 ]]; then
    if [[ $CASACORE_WITH_MPI -eq 1 ]]; then
        MAALI_TOOL_PREREQ+=" hdf5/1.10.5-parallel-api-v110 "
    else 
        MAALI_TOOL_PREREQ+=" hdf5/1.10.5-c++-noparallel-api-v110 "
    fi
    MAALI_TOOL_CONFIGURE+=' -DUSE_HDF5=ON '
    MAALI_TOOL_CONFIGURE+=' -DHDF5_ROOT_DIR=${HDF5_DIR} '
else 
    CASACORE_BUILD_NAME+="-nohdf5"
    MAALI_TOOL_CONFIGURE+=' -DUSE_HDF5=OFF '
fi
if [[ $CASACORE_WITH_OPENBLAS -eq 1 ]]; then
    MAALI_TOOL_PREREQ+=" openblas/0.3.13 "
    MAALI_TOOL_CONFIGURE+=' -DBLAS_LIBRARIES=${MAALI_OPENBLAS_HOME}/lib64/libopenblas.a -DLAPACK_LIBRARIES=${MAALI_OPENBLAS_HOME}/lib64/libopenblas.a '
    CASACORE_BUILD_NAME+="-openblas"
else 
    MAALI_TOOL_PREREQ+=" intel-mkl/19.0.5 "
    MAALI_TOOL_CONFIGURE+=' -DBLAS_LIBRARIES=${MKLROOT}/lib/intel64/libmkl_rt.so -DLAPACK_LIBRARIES=${MKLROOT}/lib/intel64/libmkl_rt.so '
fi
if [[ $CASACORE_WITH_FFTW -eq 1 ]]; then
    if [[ $CASACORE_WITH_MPI -eq 1 ]]; then
        MAALI_TOOL_PREREQ+=" fftw/3.3.8-mpi "
    else 
        MAALI_TOOL_PREREQ+=" fftw/3.3.8 "
    fi
    MAALI_TOOL_CONFIGURE+=' -DUSE_FFTW3=ON '
    MAALI_TOOL_CONFIGURE+=' -DFFTW3F_THREADS_LIBRARY=${FFTW_LIB}/libfftw3f_threads.so -DFFTW3_THREADS_LIBRARY=${FFTW_LIB}/libfftw3_threads.so -DFFTW3F_LIBRARY=${FFTW_LIB}/libfftw3f.so -DFFTW3_LIBRARY=${FFTW_LIB}/libfftw3.so MAALI_TOOL_CONFIGURE+=-DFFTW3_INCLUDE_DIR=${FFTW_INCLUDE} '
else 
    CASACORE_BUILD_NAME+="-nofftw"
    MAALI_TOOL_CONFIGURE+=' -DUSE_FFTW3=OFF '
fi

#python config options still not working, needs updates. 
if [[ $CASACORE_WITH_PYTHON3 -eq 1 ]]; then
    MAALI_TOOL_PREREQ+=" python/3.8.5 numpy/1.19.2 "
    MAALI_TOOL_CONFIGURE+=' -DBUILD_PYTHON3=ON '
    MAALI_TOOL_CONFIGURE+=' -DBUILD_PYTHON=OFF '
    MAALI_TOOL_CONFIGURE+=' -DPYTHON3_EXECUTABLE=$PYTHON_DIR/bin/python3 -DPYTHON3_LIBRARY=$PYTHON_DIR/lib/libpython3.so '
    MAALI_TOOL_CONFIGURE+=' -DPYTHON3_Boost_LIBRARIES=${MAALI_BOOST_HOME}/lib/libboost_python3.so -DPYTHON3_Boost_INCLUDE_DIRS=${MAALI_BOOST_HOME}/include/ '
    MAALI_TOOL_CONFIGURE+=' -DBOOST_LIBRARYDIR=${MAALI_BOOST_HOME}/lib '
    MAALI_MODULE_SET_PYTHONPATH=1
    CASACORE_BUILD_NAME+="-python3"
else 
    if [[ $CASACORE_WITH_PYTHON -eq 1 ]]; then
        MAALI_TOOL_PREREQ+=" python/2.7.18 numpy/1.19.2 "
        MAALI_TOOL_CONFIGURE+=' -DBUILD_PYTHON=ON '
        MAALI_TOOL_CONFIGURE+=' -DPYTHON_EXECUTABLE=$PYTHON_DIR/bin/python2 -DPYTHON_LIBRARY=$PYTHON_DIR/lib/libpython2.so ' 
        MAALI_TOOL_CONFIGURE+=' -DPYTHON_Boost_LIBRARIES=${MAALI_BOOST_HOME}/lib/libboost_python2.so -DPYTHON_Boost_INCLUDE_DIRS=${MAALI_BOOST_HOME}/include/ '
        CASACORE_BUILD_NAME+="-python2"
        MAALI_MODULE_SET_PYTHONPATH=1
    else 
        MAALI_TOOL_CONFIGURE+=' -DBUILD_PYTHON=OFF '
    fi
    MAALI_TOOL_CONFIGURE+=' -DBUILD_PYTHON3=OFF '
fi

#set the build option name 
MAALI_TOOL_BUILD_OPTIONS_SUFFIX="$CASACORE_BUILD_NAME"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CASACORE_ROOT='$MAALI_APP_HOME'
