##############################################################################
# maali cygnet file for cppzmq
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

ZeroMQ C++ headers , implements ZMTP/3.1 http://www.zeromq.org

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# url 
MAALI_URL="https://github.com/zeromq/cppzmq/archive/v${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake"

# tool pre-requisites 
MAALI_TOOL_PREREQ="libzmq/4.3.2"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_C_INCLUDE_PATH=1
MAALI_MODULE_SET_CPLUS_INCLUDE_PATH=1
MAALI_MODULE_SET_CPPZMQ_ROOT='$MAALI_APP_HOME'

function maali_cmake_build {
  cd $MAALI_TOOL_BUILD_DIR
  maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

  # now configure and compile
  cmakeargs=" "
  cmakeargs+=" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR "
  cmakeargs+=" -DCPPZMQ_BUILD_TESTS=OFF "
  maali_run 'cmake ${cmakeargs} ../'
  maali_run "make -j ${MAALI_CORES}"
  maali_run "make -j install"
}
