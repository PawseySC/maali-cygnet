##############################################################################
# maali cygnet file for erfa
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

ERFA is a C library containing key algorithms for astronomy, and is based on 
the SOFA library published by the International Astronomical Union (IAU).

ERFA is intended to replicate the functionality of SOFA (aside from possible 
bugfixes in ERFA that have not yet been included in SOFA), but is licensed under 
a three-clause BSD license to enable its compatibility with a wide range of open 
source licenses. Permission for this release has been obtained from the SOFA board, 
and is available in the LICENSE file included in this source distribution.

For further information visit https://github.com/liberfa/erfa

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="gcc/8.3.0"

# URL to download the source code from
MAALI_URL="https://github.com/liberfa/erfa/archive/refs/tags/v${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="libs"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################

function my_build {
    cd $MAALI_TOOL_BUILD_DIR
    if [ -s bootstrap.sh ]; then
        ./bootstrap.sh
    fi
    if [ -s configure ]; then
        maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE"
        maali_run "make CFLAGS=-g CXXFLAGS=-g -j $CORES"
        maali_run "make install"
    elif [ -s CMakeLists.txt ]; then
        mkdir build && cd build
        maali_run "cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE .."
        maali_run "make -j $CORES"
        maali_run "make install"
    elif [ -s Makefile ]; then
        maali_run "make CFLAGS=-g CXXFLAGS=-g -j $CORES"
        if [ $name = "lua" ]; then
            mv src/lua src/luac $INSTALL_DIR/bin
        fi
    fi
}

function maali_build {
    my_build
}