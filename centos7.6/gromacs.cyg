##############################################################################
# maali cygnet file for gromacs
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the
Newtonian equations of motion for systems with hundreds to millions of
particles.

It is primarily designed for biochemical molecules like proteins, lipids and
nucleic acids that have a lot of complicated bonded interactions, but since
GROMACS is extremely fast at calculating the nonbonded interactions (that
usually dominate simulations) many groups are also using it for research on
non-biological systems, e.g. polymers.

For further information see http://www.gromacs.org/

EOF
VMD_HOME="/pawsey/centos7.6/apps/cascadelake/gcc/8.3.0/openmpi-ucx/4.0.2/vmd/1.9.3"
# Only build for gcc
MAALI_TOOL_COMPILERS="gcc/8.3.0"
MAALI_TOOL_CUDA_COMPILERS="cuda/10.1"
MAALI_CUDA_BUILD_ONLY=1

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"
if [[ $MAALI_TOOL_VERSION == 2020* ]]; then
USE_PLUMED=1
else
USE_PLUMED=0
fi
# tool pre-requisites
# only use plumed when installing a supported gromacs version
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI intel-mkl/2019.0.5 fftw/3.3.8 boost/1.66.0 " 
if [ $USE_PLUMED ]; then
	MAALI_TOOL_PREREQ+="plumed2/2.7.1"
fi
# add additional configure options
MAALI_TOOL_CONFIGURE='-DREGRESSIONTEST_DOWNLOAD=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR -DGMX_GPU=CUDA -DGMX_FFT_LIBRARY=fftw3 -DGMX_USE_PLUGINS=ON -DBUILD_SHARED_LIBS=ON -DGMX_VMD_PLUGIN_PATH=$VMD_HOME/lib/plugins/LINUXAMD64/molfile'

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
#gromacs/2020.1 requires at least cmake/3.9.6
MAALI_TOOL_BUILD_PREREQ="cmake/3.15.0"
# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_GMXLIB='$MAALI_APP_HOME/share/gromacs/top'
MAALI_MODULE_SET_GMXBIN='$MAALI_APP_HOME/bin'
MAALI_MODULE_SET_GMXDATA='$MAALI_APP_HOME/share'
MAALI_MODULE_SET_GMXMAN='$MAALI_APP_HOME/share/man'
MAALI_MODULE_SET_VMD_PLUGIN_PATH="$VMD_HOME/lib/plugins/LINUXAMD64/molfile"
# Gromacs library path changed from version 5
LIB=lib64
MAALI_MODULE_SET_GMXLDLIB='$MAALI_APP_HOME/"$LIB"'
MAALI_MODULE_SET_LD_LIBRARY_PATH="$LIB"



function support_build {
    # cmake likes to build in a directory of it's own.
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-$1"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-$1"

    maali_run "cmake $2 .."
    if [ $DEBUG ]; then
      maali_run "make -j $MAALI_CORES  VERBOSE=TRUE"
    else
      maali_run "make -j $MAALI_CORES"
    fi
    maali_run "make install"
}


##############################################################################
function maali_cmake_build {
  # for tools that use cmake
  export VMDDIR="/pawsey/centos7.6/apps/cascadelake/gcc/8.3.0/openmpi-ucx/4.0.2/vmd/1.9.3"
  MAALI_TOOL_CONFIGURE+=" -DCUDA_TOOLKIT_ROOT_DIR=$MAALI_CUDA_HOME" 
  # Only use AVX2_256 hardware acceleration when appropriate
  # Only use AVX2_256 hardware acceleration when appropriate
  if [ ${CPU_TARGET} == "cascadelake" ]; then
    MAALI_TOOL_CONFIGURE+=" -DGMX_SIMD=AVX_512"
  elif [ ${CPU_TARGET} == "haswell" ] || [ ${CPU_TARGET} == "broadwell" ]; then
    MAALI_TOOL_CONFIGURE+=" -DGMX_SIMD=AVX2_256"
  else
    MAALI_TOOL_CONFIGURE+=" -DGMX_SIMD=AVX_256"
  fi
  if [[ $MAALI_COMPILER_NAME == "gcc"* ]]; then

    # there are 4 different builds of gromacs that can reside within the same folder, depending on the user needs
    # BUILD 1: single precision, no MPI
    support_build float_serial "$MAALI_TOOL_CONFIGURE" 
    # BUILD 2: single precision, MPI
    support_build float_mpi "$MAALI_TOOL_CONFIGURE -DGMX_MPI=ON -DGMX_BUILD_MDRUN_ONLY=ON"
    # Commented out because double precision is not supported on gpu 
    # # BUILD 3: double precision, no MPI
    # support_build double_serial "$MAALI_TOOL_CONFIGURE -DGMX_DOUBLE=ON" 
    # BUILD 4: double precision, MPI
    # support_build double_mpi "$MAALI_TOOL_CONFIGURE -DGMX_DOUBLE=ON -DGMX_MPI=ON -DGMX_THREAD_MPI=OFF -DGMX_BUILD_MDRUN_ONLY=ON"

  else
      echo "Only GCC supported"
      exit 1
  fi
}

function maali_pre_build {
    cd "$MAALI_TOOL_BUILD_DIR"
    if [ $USE_PLUMED ]; then
        plumed patch -p -e "$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION" -m shared
    fi
	# Do your plumed patching here
}

##############################################################################
