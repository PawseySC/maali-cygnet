##############################################################################
# maali cygnet file for libsigc++
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

libsigc++ implements a typesafe callback system for standard C++. It allows you to 
define signals and to connect those signals to any callback function, either global 
or a member function, regardless of whether it is static or virtual.

It also contains adaptor classes for connection of dissimilar callbacks and has an 
ease of use unmatched by other C++ callback libraries. Libsigc++ is licensed under 
the GNU Library General Public License, LGPL.

For further information, visit https://libsigcplusplus.github.io/libsigcplusplus/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
#MAALI_URL=https://github.com/libsigcplusplus/libsigcplusplus/releases/download/${MAALI_TOOL_VERSION}/libsigc++-${MAALI_TOOL_VERSION}.tar.gz
MAALI_URL="https://download.gnome.org/sources/libsigc++/2.3/libsigc++-${MAALI_TOOL_VERSION}.tar.xz"

# location we are downloading the source code to
#MAALI_DST="$MAALI_SRC/libsigc++-${MAALI_TOOL_VERSION}.tar.gz"
MAALI_DST="$MAALI_SRC/libsigc++-${MAALI_TOOL_VERSION}.tar.xz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/libsigc++-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="libs"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################
function maali_build {
    cd $MAALI_TOOL_BUILD_DIR
    #maali_run "./autogen.sh"
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE"
    export CXXFLAGS="-g -fpermissive"
    maali_run "make CFLAGS=\"$CXXFLAGS\" CXXFLAGS=\"$CXXFLAGS\" -j $CORES"
    maali_run "make install"
}