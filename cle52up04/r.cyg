##############################################################################
# Maali cygnet file for R
##############################################################################

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://cran.r-project.org/src/base/R-$MAALI_TOOL_MAJOR_VERSION/R-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/R-$MAALI_TOOL_VERSION"

# add additional configure options
MAALI_TOOL_CONFIGURE="--enable-R-shlib"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
#MAALI_TOOL_PREREQ="atp/1.8.2"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

#function maali_build {
  # this is the core function for creating software

  # allows late evaluation
#  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

# export F77=ftn
#  export LDFLAGS="-L/opt/cray/atp/1.8.2/libApp"

#  cd "$MAALI_TOOL_BUILD_DIR"
#  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
#  maali_run "make"
#  maali_run "make install"
#}

##############################################################################
