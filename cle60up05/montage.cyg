##############################################################################
# maali cygnet file for Montage
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Montage is a toolkit for assembling Flexible Image Transport System (FITS) images into custom mosaics.

http://montage.ipac.caltech.edu/

EOF

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://montage.ipac.caltech.edu/download/${MAALI_TOOL_NAME_ORIG}_v${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME_ORIG}_v$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME_ORIG}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites 
MAALI_TOOL_PREREQ="" 

# add additional configure options
MAALI_TOOL_CONFIGURE=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_INCLUDE_PATH=1

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"
  export CC=cc 
  export CXX=CC
  export CRAYPE_LINK_TYPE=dynamic 
  maali_run "make all"
  maali_run "cp ancillary/HPXcvt bin"
  maali_run "mv lib bin $MAALI_INSTALL_DIR"
}

##############################################################################
