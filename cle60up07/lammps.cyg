#############################################################################
# maali cygnet file for LAMMPS
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

LAMMPS is a classical molecular dynamics code, and an acronym for Large-scale Atomic/Molecular Massively Parallel Simulator. LAMMPS has potentials for soft materials (biomolecules, polymers) and solid-state materials (metals, semiconductors) and coarse-grained or mesoscopic systems.

EOF

# tested from version 7Aug19 on

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_INTEL_PRGENV $MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="haswell"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="gcc/7.2.0 intel/17.0.4.196" 

DOWNLOAD_LINK_VERSION=$MAALI_TOOL_VERSION
VLEN=`expr length $MAALI_TOOL_VERSION`
(( VLEN = VLEN - 2 ))
echo $VLEN
if [ $VLEN -eq 5 ]; then
        echo "DOWNLOAD VERSION IS 5"
        DOWNLOAD_LINK_VERSION="${MAALI_TOOL_VERSION:0:5}20${MAALI_TOOL_VERSION:5}"
elif [ $VLEN -eq 4 ]; then
        DOWNLOAD_LINK_VERSION="${MAALI_TOOL_VERSION:0:4}20${MAALI_TOOL_VERSION:4}"
fi;

# URL to download the source code from 
MAALI_URL="https://lammps.sandia.gov/tars/${MAALI_TOOL_NAME}-${DOWNLOAD_LINK_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${DOWNLOAD_LINK_VERSION}.tar.gz" 

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"
# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="cray-mpich/7.7.0 python/3.6.3 cray-fftw/3.3.8.4 cray-hdf5-parallel/1.10.1.1 cray-netcdf-hdf5parallel/4.4.1.1.6 gsl/2.3  ffmpeg/3.4 plumed2/2.4.2"

MAALI_TOOL_BUILD_PREREQ="cmake/3.18.0"
# for auto-building module files
MAALI_MODULE_SET_LAMMPS_ROOT='$MAALI_APP_HOME'
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH='lib64'
MAALI_MODULE_SET_PYTHONPATH='lib/python3.6/site-packages/'

##############################################################################

function maali_cmake_build {

    export CRAYPE_LINK_TYPE=dynamic
    cd $MAALI_TOOL_BUILD_DIR
    mkdir build
    cd build
        cmake_command="cmake ../cmake -DBUILD_MPI=ON -DNETCDF_DIR=$NETCDF_DIR -DNETCDF_LIBRARIES=$NETCDF_DIR/lib -DNETCDF_INCLUDE_DIRS=$NETCDF_DIR/include -DBUILD_OMP=ON -DBUILD_SHARED_LIBS=ON -DBUILD_TOOLS=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR\
                -DPKG_ASPHERE=ON -DPKG_BODY=ON -DPKG_CLASS2=ON -DPKG_COLLOID=ON -DPKG_COMPRESS=ON -DPKG_CORESHELL=ON    \
                -DPKG_DIPOLE=ON -DPKG_GRANULAR=OF -DPKG_KSPACE=ON -DPKG_MANYBODY=ON -DPKG_MC=ON -DPKG_MISC=ON -DPKG_MLIAP=ON \
                -DPKG_MOLECULE=ON -DPKG_MPIIO=ON -DPKG_MSCG=ON -DPKG_OPT=ON -DPKG_PERI=ON  -DPKG_PYTHON=ON -DPKG_QEQ=ON \
                -DPKG_REPLICA=ON -DPKG_RIGID=ON -DPKG_SHOCK=ON -DPKG_SNAP=ON -DPKG_SPIN=ON -DPKG_SRD=ON\
                -DPKG_USER-BOCS=ON -DPKG_USER-CGDNA=ON -DPKG_USER-CGSDK=ON -DPKG_USER-COLVARS=ON    \
                -DPKG_USER-DIFFRACTION=ON -DPKG_USER-DPD=ON -DPKG_USER-DRUDE=ON -DPKG_USER-EFF=ON -DPKG_USER-FEP=ON    \
                -DPKG_USER-H5MD=ON -DPKG_USER-LB=ON -DPKG_USER-MANIFOLD=ON -DPKG_USER-MEAMC=ON    \
                -DPKG_USER-MESODPD=ON -DPKG_USER-MGPT=ON -DPKG_USER-MISC=ON -DPKG_USER-MOFFF=ON    \
                -DPKG_USER-MOLFILE=ON -DPKG_USER-NETCDF=ON -DPKG_USER-OMP=ON -DPKG_USER-PHONON=ON -DPKG_USER-PLUMED=ON -DPKG_USER-PTM=ON    \
                -DPKG_USER-QTB=ON  -DPKG_USER-REACTION=ON    \
                -DPKG_USER-REAXC=ON -DPKG_USER-SDPD=ON -DPKG_USER-SMD=ON -DPKG_USER-SMTBQ=ON    \
                -DPKG_USER-SPH=ON -DPKG_USER-TALLY=ON -DPKG_USER-UEF=ON -DPKG_USER-YAFF=ON    \
                -DPKG_VORONOI=ON -DWITH_FFMPEG=ON -DWITH_GZIP=ON -DWITH_JPEG=ON -DWITH_PNG=ON -DFFT=FFTW3 -DFFTW3_INCLUDE_DIR=${FFTW_INC} -DFFTW3_LIBRARY=$FFTW_DIR"
        
        maali_run "$cmake_command"
        maali_run "make -j $MAALI_CORES"
        maali_run "make install"
}

##############################################################################
