##############################################################################
# maali cygnet file for cppunit
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/freedesktop/libreoffice-cppunit/archive/cppunit-${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ=""

# tool pre-requisites modules needed to build this new tool/package
MAALI_TOOL_BUILD_PREREQ="automake"

# add additional configure options
MAALI_TOOL_CONFIGURE=''

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_LIBRARY_PATH=1

##############################################################################

function maali_unpack {

  # unpack the tarball

  cd $MAALI_BUILD_DIR

  for MAALI_INDIVIDUAL_DST in $MAALI_DST; do

    if [ ! -f "$MAALI_INDIVIDUAL_DST" ]; then
      maali_die "$MAALI_INDIVIDUAL_DST does not exist"
    fi

    MAALI_DST_FILESIZE=$(stat -c%s "$MAALI_INDIVIDUAL_DST")
    if [ $MAALI_DST_FILESIZE -eq 0 ]; then
      maali_die "$MAALI_INDIVIDUAL_DST is 0 bytes big"
    fi

    maali_makedir "$MAALI_TOOL_BUILD_DIR"
    MAALI_TYPE=`file -b $MAALI_INDIVIDUAL_DST | cut -d ',' -f 1`
    tar xf $MAALI_INDIVIDUAL_DST --directory $MAALI_TOOL_BUILD_DIR 
    cd $MAALI_TOOL_BUILD_DIR
    echo $(pwd) 
    localdir=$(ls -d */)
    mv ${localdir}/* ./
    rmdir ${localdir} 
   

    if [ -d "$MAALI_TOOL_BUILD_DIR" ]; then
      if [ "$MAALI_PROJECT" != "" ]; then
        # this is only needed for /group
        find $MAALI_TOOL_BUILD_DIR -type d -exec chmod g+s {} \;
      fi
    fi

  done
}

function maali_build {
  # this is the core function for creating software

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`
  ./autogen.sh

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"
}
