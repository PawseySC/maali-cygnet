##############################################################################
# maali cygnet file for ABySS
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

ABySS is a de novo, parallel, paired-end sequence assembler that is designed
for short reads. The single-processor version is useful for assembling genomes
up to 100 Mbases in size. The parallel version is implemented using MPI and is
capable of assembling larger genomes.

For further information see http://www.bcgsc.ca/platform/bioinfo/software/abyss

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/bcgsc/$MAALI_TOOL_NAME/releases/download/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI sparsehash/2.0.3"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1

##############################################################################
#
function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  # See https://groups.google.com/forum/#!msg/abyss-users/jnOlYfsamsg/XTowVu6vyVMJ
  export CPPFLAGS="-I$MAALI_SPAREHASH_HOME/include"
  export CFLAGS="-DMPI_NO_CPPBIND"
  export CXXFLAGS="-DMPI_NO_CPPBIND"

  # need our own copy of boost to compile
  if [ ! -f "$MAALI_SRC/boost_1_49_0.tar.bz2" ]; then
    wget -O "$MAALI_SRC/boost_1_49_0.tar.bz2" -q http://downloads.sourceforge.net/project/boost/boost/1.49.0/boost_1_49_0.tar.bz2
  fi

  cp "$MAALI_SRC/boost_1_49_0.tar.bz2" .
  tar jxf boost_1_49_0.tar.bz2
  ln -s boost_1_49_0/boost boost

  maali_run "./configure --prefix=$MAALI_INSTALL_DIR --with-mpi=$MPI_ROOT --disable-openmp"

  find . -name Makefile | xargs -n1 -i sed -i -e 's/-Wall -Wextra -Werror/-Wall -Wextra/g' {}

  maali_run "make"
  maali_run "make install"
}

##############################################################################
