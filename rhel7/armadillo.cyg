##############################################################################
# maali cygnet file for Armadillo
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Armadillo is a high quality linear algebra library (matrix maths) for the C++
language, aiming towards a good balance between speed and ease of use.

For further information see http://arma.sourceforge.net/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/arma/files/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.xz/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.xz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ=""

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake/3.5.2"

# add additional comfigure options
MAALI_TOOL_CONFIGURE=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MANPATH=1

##############################################################################

function maali_pre_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  if [ "$MAALI_COMPILER_NAME" == "gcc" ]; then

    cmake_flags="-DCMAKE_C_COMPILER=gcc \
                 -DCMAKE_CXX_COMPILER=g++ \
                 -DCMAKE_C_FLAGS='-O2 -ffast-math -funroll-loops' \
                 -DCMAKE_CXX_FLAGS='-O2 -ffast-math -funroll-loops -std=c++11' \
                 -DMKL_ROOT=$MKLROOT"

  elif [ "$MAALI_COMPILER_NAME" == "intel" ]; then

    cmake_flags="-DCMAKE_C_COMPILER=icc \
                 -DCMAKE_CXX_COMPILER=icc \
                 -DCMAKE_C_FLAGS='-O3 -fma-align -finline-functions' \
                 -DCMAKE_CXX_FLAGS='-std=c++11 -O3 -fma -align -finline-functions' \
                 -DMKL_ROOT=$MKLROOT"

  fi

}

##############################################################################
