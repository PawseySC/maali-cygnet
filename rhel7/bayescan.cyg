##############################################################################
# maali cygnet file for bayescan
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

BayeScan aims at identifying candidate loci under natural selection from
genetic data, using differences in allele frequencies between populations.
BayeScan is based on the multinomial-Dirichlet model. One of the simplest
possible scenarios covered consists of an island model in which subpopulation
allele frequencies are correlated through a common migrant gene pool from which
they differ in varying degrees. The difference in allele frequency between this
common gene pool and each subpopulation is measured by a subpopulation specific
FST coefficient. Therefore, this formulation can consider realistic ecological
scenarios where the effective size and the immigration rate may differ among
subpopulations.

For further information see http://cmpg.unibe.ch/software/BayeScan/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://cmpg.unibe.ch/software/$MAALI_TOOL_NAME_ORIG/files/$MAALI_TOOL_NAME_ORIG$MAALI_TOOL_VERSION.zip"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG$MAALI_TOOL_VERSION.zip"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_TOOL_NAME_ORIG$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR/source"

  if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
    sed -i -e 's!g++!icpc!g' Makefile
  fi

  maali_run "make"
  maali_makedir "$MAALI_INSTALL_DIR/bin"
  maali_run "install -m 755 bayescan_2.1 $MAALI_INSTALL_DIR/bin"
  maali_run "make clean"
}

##############################################################################
