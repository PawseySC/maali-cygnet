##############################################################################
# maali cygnet file for CUDA
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

CUDAÂ® is a parallel computing platform and programming model invented by
NVIDIA. It enables dramatic increases in computing performance by harnessing
the power of the graphics processing unit (GPU)

For further information see https://developer.nvidia.com/cuda-zone

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# Specify where to download the CUDA runfile from and where to place it locally             
if [ "$MAALI_TOOL_MAJOR_VERSION" -ge 8 ]; then
   MAALI_URL="http://developer.download.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux.run"
else
   MAALI_URL="http://developer.download.nvidia.com/compute/cuda/${MAALI_TOOL_MAJOR_MINOR_VERSION}/Prod/local_installers/cuda_${MAALI_TOOL_VERSION}_linux.run"
fi

MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME_ORIG}-${MAALI_TOOL_VERSION}${VERSION_EXTRA}.run"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/cuda-${MAALI_TOOL_VERSION}${VERSION_EXTRA}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ=""

# packages that need to be installed in the operating system for this build to work
MAALI_SYSTEM_PACKAGES_PREREQ=''

# add additional configure options
MAALI_TOOL_CONFIGURE=""

# for auto-building module files

MAALI_MODULE_SET_PATH="${MAALI_INSTALL_DIR}/bin ${MAALI_INSTALL_DIR}/samples/bin/x86_64/linux/release"
if [[ $MAALI_TOOL_MAJOR_VERSION -lt 8 ]]; then
   MAALI_MODULE_SET_LD_LIBRARY_PATH="${MAALI_INSTALL_DIR}/lib64 ${MAALI_INSTALL_DIR}/lib"
else
   MAALI_MODULE_SET_LD_LIBRARY_PATH="${MAALI_INSTALL_DIR}/lib64 ${MAALI_INSTALL_DIR}/extras/CUPTI/lib64"
fi
MAALI_MODULE_SET_FPATH="${MAALI_INSTALL_DIR}/include ${MAALI_INSTALL_DIR}/include/cl ${MAALI_INSTALL_DIR}/extras/CUPTI/include"
MAALI_MODULE_SET_CPATH="${MAALI_INSTALL_DIR}/include ${MAALI_INSTALL_DIR}/include/cl ${MAALI_INSTALL_DIR}/extras/CUPTI/include"
MAALI_MODULE_SET_MANPATH="${MAALI_INSTALL_DIR}/doc/man"
MAALI_MODULE_SET_NVIDIA_CUDA_HOME='$MAALI_APP_HOME'
MAALI_MODULE_SET_NVIDIA_CUDA_TOOLKIT='$MAALI_APP_HOME'
MAALI_MODULE_SET_CUDA_VER='$MAALI_TOOL_VERSION'

function maali_unpack {

  # use this for temporary files by the installer
  maali_makedir "$MAALI_TOOL_BUILD_DIR"
  export TMPDIR=${MAALI_TOOL_BUILD_DIR}
}

##############################################################################

function maali_build {

  echo "CUDA Binary Build"
  maali_run "sh $MAALI_DST --override --silent --toolkit --toolkitpath=${MAALI_INSTALL_DIR} --tmpdir=${MAALI_TOOL_BUILD_DIR}"

  #Now add cuDNN support
  declare -a cuddn_versions=("5.1" "6.0" "7.0")
  for i in "${cuddn_versions[@]}"
  do
      cuddnFile="${MAALI_SRC}/cudnn-${MAALI_TOOL_MAJOR_MINOR_VERSION}-linux-x64-v${i}.tgz"
      if [ -f $cuddnFile ]; then
         echo "Matching cudnn detected -> Installing"
         cd ${MAALI_INSTALL_DIR}
         tar xzf $cuddnFile
         mv cuda/include/* include/
         mv cuda/lib64/* lib64/
         rmdir cuda/include
         rmdir cuda/lib64
         rmdir cuda
         break 
      fi
  done

 # add NCCL 2.0 support
  nccl_ver="2.0.5-2"
  if [ -f ${MAALI_SRC}/nccl_${nccl_ver}-cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64.txz ]; then
     echo "nccl detected -> Installing"
     cd ${MAALI_INSTALL_DIR}
     tar xJf $MAALI_SRC/nccl_${nccl_ver}-cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64.txz
     mv nccl_${nccl_ver}+cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64/include/* include
     mv nccl_${nccl_ver}+cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64/lib/* lib64
     rmdir nccl_${nccl_ver}+cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64/include
     rmdir nccl_${nccl_ver}+cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64/lib
     mv nccl_${nccl_ver}+cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64/*.txt .
     rmdir nccl_${nccl_ver}+cuda${MAALI_TOOL_MAJOR_MINOR_VERSION}_amd64
  fi 

}

##############################################################################
