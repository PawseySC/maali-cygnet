##############################################################################
# maali cygnet file for gobject-introspection
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

GObject introspection is a middleware layer between C libraries (using GObject)
and language bindings. The C library can be scanned at compile time and
generate a metadata file, in addition to the actual native C library. Then at
runtime, language bindings can read this metadata and automatically provide
bindings to call into the C library.

For further information see https://wiki.gnome.org/GObjectIntrospection

EOF

# specify which compilers we want to build the tool with
#MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_SYSTEM_GCC"
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_PYTHON"

# URL to download the source code from
if [ $MAALI_TOOL_VERSION \> "1.45.2" ]; then
MAALI_URL="ftp.gnome.org/pub/GNOME/sources/$MAALI_TOOL_NAME/$MAALI_TOOL_MAJOR_MINOR_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.xz"
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.xz"
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION"
else
DLVERSION=`echo $MAALI_TOOL_VERSION | tr '.' '_'`
MAALI_URL="https://github.com/GNOME/gobject-introspection/archive/GOBJECT_INTROSPECTION_${DLVERSION}.tar.gz"
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-GOBJECT_INTROSPECTION_${DLVERSION}"
fi

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
#MAALI_TOOL_PREREQ="python/2.7.14"
MAALI_TOOL_PREREQ="gcc/4.8.5"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################


if [ $MAALI_TOOL_VERSION \< "1.45.3" ]; then
function maali_pre_build {
  cd "$MAALI_TOOL_BUILD_DIR"
  NOCONFIGURE=1 ./autogen.sh
}
fi

function maali_python_build {
  # this is the core function for creating software

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"
}

