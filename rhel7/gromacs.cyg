##############################################################################
# maali cygnet file for gromacs
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the
Newtonian equations of motion for systems with hundreds to millions of
particles.

It is primarily designed for biochemical molecules like proteins, lipids and
nucleic acids that have a lot of complicated bonded interactions, but since
GROMACS is extremely fast at calculating the nonbonded interactions (that
usually dominate simulations) many groups are also using it for research on
non-biological systems, e.g. polymers.

For further information see http://www.gromacs.org/

EOF

# supports building CUDA version
MAALI_CUDA_SUPPORT=1

# specify which compilers we want to build the tool with
if [ $MAALI_CUDA_BUILD -eq 0 ]; then
   #MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"
   MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"
   MAALI_TOOL_CUDA_COMPILERS=""
else
   MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"
   MAALI_TOOL_CUDA_COMPILERS="cuda/8.0.61_375.26"
fi

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI fftw/3.3.7 boost/1.65.1"

# add additional configure options
MAALI_TOOL_CONFIGURE=' -DGMX_FFT_LIBRARY=fftw3 -DCMAKE_PREFIX_PATH=$MAALI_FFTW_HOME'

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_GMXLIB='$MAALI_APP_HOME/share/gromacs/top'
MAALI_MODULE_SET_GMXBIN='$MAALI_APP_HOME/bin'
MAALI_MODULE_SET_GMXDATA='$MAALI_APP_HOME/share'
MAALI_MODULE_SET_GMXMAN='$MAALI_APP_HOME/share/man'

# Gromacs library path changed from version 5
LIB=lib64
MAALI_MODULE_SET_GMXLDLIB='$MAALI_APP_HOME/"$LIB"'
MAALI_MODULE_SET_LD_LIBRARY_PATH="$LIB"

##############################################################################
function maali_cmake_build {
  # for tools that use cmake

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # Only use AVX2_256 hardware acceleration when appropriate
  if [ ${CPU_TARGET} == "haswell" ] || [ ${CPU_TARGET} == "broadwell" ]; then
    MAALI_TOOL_CONFIGURE_EVAL+=" -DGMX_SIMD=AVX2_256"
  else
    MAALI_TOOL_CONFIGURE_EVAL+=" -DGMX_SIMD=AVX_256"
  fi

  if [[ $MAALI_COMPILER_NAME == "gcc"* ]]; then

    # cmake likes to build in a directory of it's own.  single-precision, no MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

    para_make=20
    maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR -DGMX_GPU=OFF $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make -j $para_make VERBOSE=TRUE"
    else
      maali_run "make -j $para_make "
    fi
    maali_run "make install"

    # cmake likes to build in a directory of it's own. double-precision, no MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"

    maali_run "cmake -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR -DGMX_GPU=OFF $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make  -j $para_make  VERBOSE=TRUE"
    else
      maali_run "make  -j $para_make "
    fi
    maali_run "make install"

    # cpu build of gromacs should only use the gcc compilers
    if [ $MAALI_CUDA_BUILD -eq 0 ]; then

      #MPT has defined a macro called UNDEFINED so gromacs is not happy about that
      sed -i -e 's;#define UNDEFINED       "UNDEFINED";#define GMX_UNDEFINED       "UNDEFINED";g' $MAALI_TOOL_BUILD_DIR/src/gromacs/legacyheaders/names.h
      sed -i -e 's;UNDEFINED :;GMX_UNDEFINED :;g' $MAALI_TOOL_BUILD_DIR/src/gromacs/legacyheaders/names.h

      #turn off C++ bindings in MPT
      sed -i -e '/#define OMPI_SKIP_MPICXX 1/a \#define MPI_NO_CPPBIND 1' $MAALI_TOOL_BUILD_DIR/src/gromacs/utility/gmxmpi.h

      # cmake likes to build in a directory of it's own.  single-precision, MPI
      maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"
      cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"

      maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON -DGMX_GPU=OFF -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
      if [ $DEBUG ]; then
        maali_run "make  -j $para_make  VERBOSE=TRUE"
      else
        maali_run "make  -j $para_make "
      fi
      maali_run "make install"

      # cmake likes to build in a directory of it's own. double-precision, MPI
      maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"
      cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"

      maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON -DGMX_GPU=OFF -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
      if [ $DEBUG ]; then
        maali_run "make  -j $para_make  VERBOSE=TRUE"
      else
        maali_run "make  -j $para_make "
      fi
      maali_run "make install"

    # gpu build of gromacs when maali is invoked with -n 
    else

    # cmake likes to build in a directory of it's own. CUDA, single-precision
      maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-cuda"
      cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-cuda"

      maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL -DGMX_GPU=ON -DGMX_DEFAULT_SUFFIX=OFF -DGMX_BINARY_SUFFIX=\"_cuda\" -DGMX_LIBS_SUFFIX=\"_cuda\" $MAALI_CMAKE_PATH"
      if [ $DEBUG ]; then
        maali_run "make -j $para_make  VERBOSE=TRUE"
      else
        maali_run "make -j $para_make "
      fi
      maali_run "make install"

      fi
    else
      echo "Only GCC supported"
      exit 1
    fi
}

##############################################################################
