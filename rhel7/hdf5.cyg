##############################################################################
# maali cygnet file for hdf5
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

HDF5 is a data model, library, and file format for storing and managing data.
It supports an unlimited variety of datatypes, and is designed for flexible and
efficient I/O and for high volume and complex data. HDF5 is portable and is
extensible, allowing applications to evolve in their use of HDF5. The HDF5
Technology suite includes tools and applications for managing, manipulating,
viewing, and analyzing data in the HDF5 format.

For further information see https://www.hdfgroup.org/hdf5/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://www.hdfgroup.org/ftp/HDF5/releases/$MAALI_TOOL_NAME-$MAALI_TOOL_MAJOR_MINOR_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION/src/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="szip/2.1.1"

# add additional configure options
MAALI_TOOL_CONFIGURE='--with-zlib --with-szlib=$MAALI_SZIP_HOME --enable-fortran --enable-cxx --enable-build-mode=production --with-default-api-version=v16'

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_HDF5_DIR='$MAALI_APP_HOME'

##############################################################################

function maali_pre_build {
  cd "$MAALI_TOOL_BUILD_DIR"
  if [ "$MAALI_COMPILER" == "gcc/4.8.3" ]; then
    # Fails on:
    # Testing hard normalized long double -> signed char conversions        Command terminated by signal 11
    # 0.08user 0.01system 0:00.15elapsed 63%CPU (0avgtext+0avgdata 3288maxresident)k
    # 0inputs+216outputs (0major+12213minor)pagefaults 0swaps

    export CFLAGS=-O0
  else
    export CFLAGS=
  fi

  if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
    if [ $MAALI_TOOL_MAJOR_MINOR_VERSION -lt 1.10 ]; then
      echo "H5test_kind_LDFLAGS=-static-libgfortran" >> fortran/src/Makefile.am
    fi
  fi

  echo "AAA = $LD_LIBRARY_PATH"
}

##############################################################################
