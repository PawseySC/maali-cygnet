##############################################################################
# maali cygnet file for LDC
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

The LDC project aims to provide a portable D programming language compiler with
modern optimization and code generation capabilities.

The compiler uses the official DMD frontends to support the latest version of
D2, and relies on the LLVM Core libraries for code generation.

For further information see https://github.com/ldc-developers/ldc

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
MAALI_URL="https://github.com/ldc-developers/ldc/releases/download/v$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ=""

MAALI_CMAKE_TOOL=1

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="llvm/5.0.0 dmd/2.077.1"

# add additional configure options
#MAALI_TOOL_CONFIGURE='-DLIBCONFIG_INCLUDE_DIR=$MAALI_LIBCONFIG_HOME/include -DLIBCONFIG_LIBRARY=$MAALI_LIBCONFIG_HOME/lib/libconfig++.a'

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1

##############################################################################
