##############################################################################
# maali cygnet file for netcdf
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

NetCDF is a set of software libraries and self-describing, machine-independent
data formats that support the creation, access, and sharing of array-oriented
scientific data.

For further information see https://www.unidata.ucar.edu/software/netcdf/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://www.unidata.ucar.edu/downloads/$MAALI_TOOL_NAME/ftp/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# add additional configure options
MAALI_TOOL_CONFIGURE='--enable-netcdf-4'

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="szip/2.1.1 hdf5/1.10.1"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

MAALI_TOOL_VERSION_CXX="4.3.0"
MAALI_TOOL_VERSION_FC="4.4.4"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH='lib'
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1
MAALI_MODULE_SET_NETCDF='$MAALI_APP_HOME'

###############################################################################

function maali_build {

  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  export CFLAGS="-fPIC -I$MAALI_HDF5_HOME/include -I$MAALI_SZIP_HOME/include -L$MAALI_HDF5_HOME/lib -L$MAALI_SZIP_HOME/lib"
  export LDFLAGS="-L$MAALI_HDF5_HOME/lib -L$MAALI_SZIP_HOME/lib"

  # netcdf-C interface.
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL --enable-shared"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"

  # C++ library
  if [ ! -f "$MAALI_SRC/$MAALI_TOOL_NAME-cxx4-$MAALI_TOOL_VERSION_CXX.tar.gz" ]; then
    wget -O "$MAALI_SRC/$MAALI_TOOL_NAME-cxx4-$MAALI_TOOL_VERSION_CXX.tar.gz" -q "http://www.unidata.ucar.edu/downloads/$MAALI_TOOL_NAME/ftp/$MAALI_TOOL_NAME-cxx4-$MAALI_TOOL_VERSION_CXX.tar.gz"
  fi

  tar zxf "$MAALI_SRC/$MAALI_TOOL_NAME-cxx4-$MAALI_TOOL_VERSION_CXX.tar.gz"
  cd "$MAALI_TOOL_NAME-cxx4-$MAALI_TOOL_VERSION_CXX"

  export CFLAGS=""
  export CPPFLAGS="-I$MAALI_INSTALL_DIR/include -L$MAALI_INSTALL_DIR/lib"
  export LDFLAGS="-L$MAALI_INSTALL_DIR/lib"

  maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-shared"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"

  # fortran library
  if [ ! -f "$MAALI_SRC/$MAALI_TOOL_NAME-fortran-$MAALI_TOOL_VERSION_FC.tar.gz" ]; then
      wget -O "$MAALI_SRC/$MAALI_TOOL_NAME-fortran-$MAALI_TOOL_VERSION_FC.tar.gz" -q "http://www.unidata.ucar.edu/downloads/$MAALI_TOOL_NAME/ftp/$MAALI_TOOL_NAME-fortran-$MAALI_TOOL_VERSION_FC.tar.gz"
  fi

  export CFLAGS=""
  export CPPFLAGS="-I$MAALI_INSTALL_DIR/include -L$MAALI_INSTALL_DIR/lib"
  export FCFLAGS="-I$MAALI_INSTALL_DIR/include -L$MAALI_INSTALL_DIR/lib"
  export LDFLAGS="-L$MAALI_INSTALL_DIR/lib"
  export LD_LIBRARY_PATH="$MAALI_INSTALL_DIR/lib:$LD_LIBRARY_PATH"

  cd ..
  tar zxf "$MAALI_SRC/$MAALI_TOOL_NAME-fortran-$MAALI_TOOL_VERSION_FC.tar.gz"
  cd "$MAALI_TOOL_NAME-fortran-$MAALI_TOOL_VERSION_FC"

  maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-shared"
  maali_run "make -j $MAALI_CORES"
  maali_run "make install"
}

##############################################################################
