##############################################################################
# maali cygnet file for plink
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

PLINK is a whole genome association analysis toolset, designed to perfrom a
range fo basic, large-scale analyses in a computationally efficient manner.

For further information see http://zzz.bwh.harvard.edu/plink/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://pngu.mgh.harvard.edu/~purcell/plink/dist/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src.zip"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src.zip"

# patch files to download
MAALI_TOOL_PATCHES="001 002 003"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="intel-mkl/2017.0.4"

# add additional configure options
MAALI_TOOL_CONFIGURE=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_PATH=1

##############################################################################

function maali_build {

  cd "$MAALI_TOOL_BUILD_DIR"

  if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
      sed -i -e 's/g++/icpc/g' Makefile
  fi

  sed -i 's/WITH_LAPACK =/WITH_LAPACK = 1/g' Makefile
  sed -i 's/LIB_LAPACK = \/usr\/lib\/liblapack.so.3/LIB_LAPACK = -L\$\(MKLROOT\)\/lib\/intel64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -lm/g' Makefile
  sed -i 's/FORCE_DYNAMIC =/FORCE_DYNAMIC = 1/g' Makefile
  sed -i 's/LIB += -lz/LIB += -L\$\(MAALI_ZLIB_HOME)\/lib -lz/g' Makefile

  # this is theoretically only for gcc/4.8.3
  patch -p0 < $MAALI_FILES_PATH/$MAALI_TOOL_NAME.001.patch
  patch -p0 < $MAALI_FILES_PATH/$MAALI_TOOL_NAME.002.patch
  patch -p0 < $MAALI_FILES_PATH/$MAALI_TOOL_NAME.003.patch

  maali_run "make" 

  maali_makedir "$MAALI_INSTALL_DIR/bin"
  maali_run "install -m 755 plink $MAALI_INSTALL_DIR/bin/"

}

##############################################################################
