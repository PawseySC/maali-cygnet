##############################################################################
# maali cygnet file for silo
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Silo is a library for reading and writing a wide variety of scientific data to
binary, disk files. The files Silo produces and the data within them can be
easily shared and exchanged between wholly independently developed applications
running on disparate computing platforms. Consequently, Silo facilitates the
development of general purpose tools for processing scientific data. One of the
more popular tools that process Silo data files is the VisIt visualization
tool.

For further information see https://wci.llnl.gov/simulation/computer-codes/silo

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
MAALI_URL="https://wci.llnl.gov/content/assets/docs/simulation/computer-codes/$MAALI_TOOL_NAME/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="hdf5/1.10.1"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1

#MAALI_TOOL_CONFIGURE='--enable-silex --enable-fortran --enable-shared --with-zlib --with-hdf5=$HDF5_DIR/include,$HDF5_DIR/lib --with-Qt-dir=$MAALI_QT_HOME'
#MAALI_TOOL_CONFIGURE_NOHDF5='--enable-silex --enable-fortran --enable-shared --with-zlib --with-Qt-dir=$MAALI_QT_HOME'
MAALI_TOOL_CONFIGURE='--disable-silex --enable-fortran --enable-shared --with-zlib --with-hdf5=$HDF5_DIR/include,$HDF5_DIR/lib'
MAALI_TOOL_CONFIGURE_NOHDF5='--disable-silex --enable-fortran --enable-shared --with-zlib'

##############################################################################

function maali_build {
    cd "$MAALI_TOOL_BUILD_DIR"
    MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE_NOHDF5"`

    export CFLAGS="-fPIC"
    export CXXFLAGS="-fPIC -std=c++11"

    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
    maali_run "make"
    maali_run "make install"
    maali_run "make clean"

    MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
    maali_run "make"
    maali_run "make install"
}

##############################################################################
