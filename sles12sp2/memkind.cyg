##############################################################################
# maali cygnet file for libmemkind
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

User Extensible Heap Manager built on top of jemalloc which enables control of memory characteristics and a partitioning of the heap between kinds of memory.

http://memkind.github.io/memkind/
EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# specify CPU targets to build for
MAALI_TOOL_CPU_TARGET="$MAALI_DEFAULT_TOOL_TARGET"

# URL to download the source code from
MAALI_URL="https://github.com/memkind/memkind/archive/v$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="numactl"

# add additional configure options
#
#### NOTE ####
# These configure options are only for getting a functional build on f001
# They need to be changed for Athena and more performant options chosen
##############
MAALI_TOOL_CONFIGURE=""


# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_MVAPICH2_HOME='$MAALI_APP_HOME'

##############################################################################

function maali_build {
	cd $MAALI_TOOL_BUILD_DIR
	maali_run "./build.sh --prefix=$MAALI_INSTALL_DIR LDFLAGS=-L$MAALI_NUMACTL_HOME/lib CPPFLAGS=-I$MAALI_NUMACTL_HOME/include"
	maali_run "make install"

}
