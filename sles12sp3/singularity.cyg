##############################################################################
# maali cygnet file for singularity 
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Singularity enables users to have full control of their environment. Singularity 
containers can be used to package entire scientific workflows, software and 
libraries, and even data.

For further information see https://sylabs.io/singularity

EOF

# specify which compilers we want to build the tool with
# Should only build it with the system gcc as it just forms the container host
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_SYSTEM_GCC"

# specify the architectures we want to build the library on
MAALI_TOOL_CPU_TARGET="na"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="go"

# URL to download the source code from
MAALI_URL="https://github.com/sylabs/singularity/releases/download/v${MAALI_TOOL_VERSION}/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
#MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_SINGULARITYENV_LD_LIBRARY_PATH='/usr/lib64:/pawsey/intel/18.0.3/compilers_and_libraries/linux/mpi/intel64/lib'
MAALI_MODULE_SET_SINGULARITY_BINDPATH='/astro,/group,/scratch,/pawsey,/etc/dat.conf,/etc/libibverbs.d,/usr/lib64/libdaplofa.so.2,/usr/lib64/libdaplofa.so.2.0.0,/usr/lib64/libdat2.so.2,/usr/lib64/libdat2.so.2.0.0,/usr/lib64/libibverbs,/usr/lib64/libibverbs.so,/usr/lib64/libibverbs.so.1,/usr/lib64/libibverbs.so.1.1.14,/usr/lib64/libmlx5.so,/usr/lib64/libmlx5.so.1,/usr/lib64/libmlx5.so.1.1.14,/usr/lib64/libnl-3.so.200,/usr/lib64/libnl-3.so.200.18.0,/usr/lib64/libnl-cli-3.so.200,/usr/lib64/libnl-cli-3.so.200.18.0,/usr/lib64/libnl-genl-3.so.200,/usr/lib64/libnl-genl-3.so.200.18.0,/usr/lib64/libnl-idiag-3.so.200,/usr/lib64/libnl-idiag-3.so.200.18.0,/usr/lib64/libnl-nf-3.so.200,/usr/lib64/libnl-nf-3.so.200.18.0,/usr/lib64/libnl-route-3.so.200,/usr/lib64/libnl-route-3.so.200.18.0,/usr/lib64/librdmacm.so,/usr/lib64/librdmacm.so.1,/usr/lib64/librdmacm.so.1.0.14'
MAALI_MODULE_SET_SINGULARITY_CACHEDIR='os.getenv\(\"MYGROUP\"\)..\"/.singularity\"'
MAALI_MODULE_QUOTES_SINGULARITY_CACHEDIR=off

##############################################################################

function maali_build {

  local MAALI_TOOL_BUG_VERSION=$(echo "$MAALI_TOOL_VERSION" | cut -d '.' -f 3)

  if [[ $MAALI_COMPILER_NAME == "intel"* ]]; then
    export CC=icc
    export F77=ifort
    export CFLAGS="-fPIC -xCORE-AVX2 -O3"
    export FFLAGS="-fPIC -xCORE_AVX2 -O3"
  else
    export CC=gcc
    export F77=gfortran
    export CFLAGS="-fPIC -mavx2 -O3"
    export FFLAGS="-fPIC -mavx2 -O3"
  fi

  if [[ $MAALI_TOOL_MAJOR_VERSION -lt 2 ]]; then
    echo "Versions prior to 2.x.x are not supported"
    exit 1
  elif [[ $MAALI_TOOL_MAJOR_VERSION -lt 3 ]]; then
    cd "$MAALI_TOOL_BUILD_DIR"
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR"
    maali_run "make -j $MAALI_CORES"
    maali_run "make install"
  else
    cd "$MAALI_TOOL_BUILD_DIR"
  
    maali_run "rm -rf ${GOPATH}/src/github.com/sylabs"
    maali_run "mkdir -p ${GOPATH}/src/github.com/sylabs"
    cd ${GOPATH}/src/github.com/sylabs
    maali_run "tar xfz $MAALI_DST"
    cd ${GOPATH}/src/github.com/sylabs/singularity

    if [[ $MAALI_TOOL_MAJOR_VERSION -eq 3 && $MAALI_TOOL_MINOR_VERSION -eq 5 && $MAALI_TOOL_BUG_VERSION -lt 3 ]]; then
      echo "Patching broken version"
      maali_run "wget https://patch-diff.githubusercontent.com/raw/sylabs/singularity/pull/4769.patch"
      maali_run "patch -p1 < 4769.patch"
    fi

    maali_run "./mconfig --prefix=$MAALI_INSTALL_DIR"
    cd "${GOPATH}/src/github.com/sylabs/singularity/builddir"
    maali_run "make -j $MAALI_CORES"
    maali_run "make install"
  fi

  maali_run "sed -i 's/^ *mount *home *=.*/mount home = no/g' ${MAALI_INSTALL_DIR}/etc/singularity/singularity.conf"
  maali_run "sed -i 's/^ *allow *container *encrypted *=.*/allow container encrypted = no/g' ${MAALI_INSTALL_DIR}/etc/singularity/singularity.conf"

  echo "The following manual changes are required as root:"
  echo "chown root ${MAALI_INSTALL_DIR}/libexec/singularity/bin/starter-suid"
  echo "chown -R root ${MAALI_INSTALL_DIR}/etc"
  echo "chmod u+s ${MAALI_INSTALL_DIR}/libexec/singularity/bin/starter-suid"
}

##############################################################################
