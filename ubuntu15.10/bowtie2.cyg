##############################################################################
# MAALI config file for bowtie
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/bowtie-bio/files/$MAALI_TOOL_NAME/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-source.zip/download"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-source.zip"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_WHATIS="Bowtie 2 is an ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences."

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
    sed -i -e 's!$(GCC_PREFIX)/gcc$(GCC_SUFFIX)!icc!g' Makefile
    sed -i -e 's!$(GCC_PREFIX)/g++$(GCC_SUFFIX)!icpc!g' Makefile
  fi

  maali_run "make"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"
  maali_run "mv bowtie2 bowtie2-* $MAALI_INSTALL_DIR/bin"

}

