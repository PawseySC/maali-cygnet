##############################################################################
# maali config file for Beast
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

MAALI_TOOL_VERSION_MAJOR=`echo "$MAALI_TOOL_VERSION" | cut -d '.' -f 1`

if [ $MAALI_TOOL_VERSION_MAJOR -ge 2 ]; then 
  # URL to download the source code from
  MAALI_URL="https://github.com/CompEvol/beast2/releases/download/v${MAALI_TOOL_VERSION}/${MAALI_TOOL_NAME_ORIG}.v${MAALI_TOOL_VERSION}.Linux.tgz"

  # location we are downloading the source code to
  MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME.v$MAALI_TOOL_VERSION.Linux.tgz"

  # where the unpacked source code is located
  MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/BEAST"
else
  # URL to download the source code from
  MAALI_URL="http://beast-mcmc.googlecode.com/files/v$MAALI_TOOL_VERSION.tgz"

  # location we are downloading the source code to
  MAALI_DST="$MAALI_SRC/BEASTv$MAALI_TOOL_VERSION.tgz"

  # where the unpacked source code is located
  MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/BEASTv$MAALI_TOOL_VERSION"
fi

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites tested with java/8u191 beagle-lib 3.1.1 
MAALI_TOOL_PREREQ="java/8u191 beagle-lib/3.1.1"

# for auto-building module files

MAALI_MODULE_SET_BEAST_DIR='$MAALI_INSTALL_DIR'
MAALI_MODULE_SET_BEAST_LIB='$MAALI_INSTALL_DIR/lib'
#MAALI_MODULE_SET_SETENV='BEAST_DIR=$MAALI_INSTALL_DIR BEAST_LIB=$MAALI_INSTALL_DIR/lib'
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_WHATIS="Bayesian evolutionary analysis by sampling trees-(BEAST)2 is a cross-platform program for Bayesian phylogenetic analysis of molecular sequences."

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  if [ $MAALI_TOOL_VERSION_MAJOR -lt 2 ]; then 
    cd native

    #Stupid Beast, developers pacakged mac object files by default on 1.8.0
    rm -rf $MAALI_TOOL_BUILD_DIR/native/*.o

    if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
      maali_run "make -f Makefile.icc"
    elif [ "$MAALI_COMPILER_NAME" == "gcc" ]; then
      maali_run "make -f Makefile.linux"
    else
      echo "Only gcc and intel are supported"
      exit 1;
    fi
    maali_run "mv libNucleotideLikelihoodCore.so ../lib/"
    maali_run "rm -f ../lib/libNucleotideLikelihoodCore32.so"

    cd ..
  fi

  maali_run "mkdir -p $MAALI_INSTALL_DIR/"

  if [ $MAALI_TOOL_VERSION_MAJOR -lt 2 ]; then 
    maali_run "mv bin doc examples images lib *.txt $MAALI_INSTALL_DIR"
    cat <<EOF >"$MAALI_INSTALL_DIR/bin/beast"
#!/bin/bash

java -Xms64m -Xmx1024m -Djava.library.path="\$BEAST_LIB:\$BEAGLE_LIB_DIR/lib" -cp "\$BEAST_LIB/beast.jar:\$BEAST_LIB/beast-beagle.jar" dr.app.beast.BeastMain \$*
EOF
  else
    maali_run "mv bin examples images lib *.txt $MAALI_INSTALL_DIR"

    cat <<EOF >"$MAALI_INSTALL_DIR/bin/beast"
#!/bin/bash

java -Xms256m -Xmx1024m -Djava.library.path="\$BEAST_LIB" -cp "\$BEAST_LIB/beast.jar" beast.app.beastapp.BeastMain $*
EOF
  fi

  maali_run "chmod 755 $MAALI_INSTALL_DIR/bin/beast"

}

##############################################################################
