##############################################################################
# maali cygnet file for gromacs
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# specify which cuda versions we want to build the tool with
MAALI_TOOL_CUDA_COMPILERS="$MAALI_DEFAULT_CUDA_COMPILERS"

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
# uses fttw/3.3.4+ boost/1.49.0 lapack/3.5.0+  
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI fftw/3.3.5 boost/1.62.0 lapack/3.6.1"

# supports building CUDA version
MAALI_CUDA_SUPPORT=0

# add additional configure options
# -DGMX_SIMD=AVX2_256
MAALI_TOOL_CONFIGURE=' -DGMX_GPU=OFF -DGMX_SIMD=AVX_128_FMA -DBUILD_SHARED_LIBS=on -DGMX_FFT_LIBRARY=fftw3 -DFFTWF_INCLUDE_DIR=$FFTW_INCLUDE  -DCMAKE_PREFIX_PATH=$MAALI_FFTW_HOME -DFFTW3_LIBRARIES=$FFTW_LIB -DFFTW3F_LIBRARIES=$FFTW_LIB -DFFTW3F_INCLUDE_DIR=$FFTW_INCLUDE -DFFTW3_INCLUDE_DIR=$FFTW_INCLUDE  -DGMX_BUILD_UNITTESTS=OFF -DGMX_USE_RDTSCP=OFF '

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="cmake"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_WHATIS='GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.'
MAALI_MODULE_SET_GMXLIB='$MAALI_APP_HOME/share/gromacs/top'
MAALI_MODULE_SET_GMXBIN='$MAALI_APP_HOME/bin'
MAALI_MODULE_SET_GMXDATA='$MAALI_APP_HOME/share'
MAALI_MODULE_SET_GMXMAN='$MAALI_APP_HOME/share/man'

# Gromacs library path changed from version 5
if [ $MAALI_TOOL_MAJOR_VERSION -le 4 ]; then
  LIB=lib
  MAALI_MODULE_SET_GMXLDLIB='$MAALI_APP_HOME/"$LIB"'
  MAALI_MODULE_SET_LD_LIBRARY_PATH=1                                                                                                                     
elif [ $MAALI_TOOL_MAJOR_VERSION -ge 5 ]; then
  LIB=lib64
  MAALI_MODULE_SET_GMXLDLIB='$MAALI_APP_HOME/"$LIB"'
  MAALI_MODULE_SET_LD_LIBRARY_PATH="$LIB"
fi

##############################################################################
function maali_cmake_build {
  # for tools that use cmake

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`


if [ $MAALI_TOOL_VERSION == 4.5.5 ] || [ $MAALI_TOOL_VERSION == 4.6.7 ]; then

  	# cmake likes to build in a directory of it's own.  single-precision, no MPI, no GPU
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

        
  	maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make -j $MAALI_CORES VERBOSE=TRUE"
  	else
  	  maali_run "make -j $MAALI_CORES "
  	fi
  	maali_run "make install"

  	# cmake likes to build in a directory of it's own. double-precision, no MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"

  	maali_run "cmake -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make -j $MAALI_CORES "
  	fi
  	maali_run "make install"

    # cpu build of gromacs
    if [ $MAALI_CUDA_BUILD -eq 0 ]; then

  	## cmake likes to build in a directory of it's own.  single-precision, MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"

  	maali_run "cmake -DGMX_MPI=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make mdrun -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make mdrun -j $MAALI_CORES "
  	fi
  	maali_run "make install-mdrun"

  	# cmake likes to build in a directory of it's own. double-precision, MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"

  	maali_run "cmake -DGMX_MPI=ON -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make mdrun -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make mdrun -j $MAALI_CORES "
  	fi
  	maali_run "make install-mdrun"

    # gpu build of gromacs when maali is invoked with -n 
    else

  	# cmake likes to build in a directory of it's own. CUDA, single-precision
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-cuda"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-cuda"

  	maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE -DGMX_GPU=ON -DGMX_DEFAULT_SUFFIX=OFF -DGMX_BINARY_SUFFIX=\"_cuda\" -DGMX_LIBS_SUFFIX=\"_cuda\" $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make mdrun -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make mdrun -j $MAALI_CORES "
  	fi
  	maali_run "make install-mdrun"

    fi

elif [ $MAALI_TOOL_VERSION == 5.1.4 ]; then

  	# cmake likes to build in a directory of it's own.  single-precision, no MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"

  	maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make -j $MAALI_CORES VERBOSE=TRUE"
  	else
  	  maali_run "make -j $MAALI_CORES "
  	fi
  	maali_run "make install"

  	# cmake likes to build in a directory of it's own. double-precision, no MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"

  	maali_run "cmake -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make  -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make  -j $MAALI_CORES "
  	fi
  	maali_run "make install"

    # cpu build of gromacs
    if [ $MAALI_CUDA_BUILD -eq 0 ]; then

	#MPT has defined a macro called UNDEFINED so gromacs is not happy about that
        sed -i -e 's;#define UNDEFINED       "UNDEFINED";#define GMX_UNDEFINED       "UNDEFINED";g' $MAALI_TOOL_BUILD_DIR/src/gromacs/legacyheaders/names.h
        sed -i -e 's;UNDEFINED :;GMX_UNDEFINED :;g' $MAALI_TOOL_BUILD_DIR/src/gromacs/legacyheaders/names.h

	#turn off C++ bindings in MPT
        sed -i -e '/#define OMPI_SKIP_MPICXX 1/a \#define MPI_NO_CPPBIND 1' $MAALI_TOOL_BUILD_DIR/src/gromacs/utility/gmxmpi.h

  	# cmake likes to build in a directory of it's own.  single-precision, MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"

  	maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make  -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make  -j $MAALI_CORES "
  	fi
  	maali_run "make install"

  	# cmake likes to build in a directory of it's own. double-precision, MPI
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"

  	maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make  -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make  -j $MAALI_CORES "
  	fi
  	maali_run "make install"

    # gpu build of gromacs when maali is invoked with -n 
    else

  	# cmake likes to build in a directory of it's own. CUDA, single-precision
  	maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-cuda"
  	cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-cuda"

  	maali_run "cmake -DGMX_BUILD_MDRUN_ONLY=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE -DGMX_GPU=ON -DGMX_DEFAULT_SUFFIX=OFF -DGMX_BINARY_SUFFIX=\"_cuda\" -DGMX_LIBS_SUFFIX=\"_cuda\" $MAALI_CMAKE_PATH"
  	if [ $DEBUG ]; then
  	  maali_run "make -j $MAALI_CORES  VERBOSE=TRUE"
  	else
  	  maali_run "make -j $MAALI_CORES "
  	fi
  	maali_run "make install"

    fi

fi
}

##############################################################################
